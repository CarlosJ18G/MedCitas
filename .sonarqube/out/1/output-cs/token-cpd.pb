†	
_C:\Users\Usuario\Desktop\medcitas\MedCitas\MedCitas.Infrastructure\Services\FakeEmailService.cs
	namespace 	
MedCitas
 
. 
Infrastructure !
.! "
Services" *
{		 
public

 

class

 
FakeEmailService

 !
:

" #
IEmailService

$ 1
{ 
public 
Task )
EnviarCorreoVerificacionAsync 1
(1 2
string2 8
destinatario9 E
,E F
stringG M
tokenVerificacionN _
)_ `
{ 	
Console 
. 
	WriteLine 
( 
$"  
$str  <
{< =
destinatario= I
}I J
"J K
)K L
;L M
Console 
. 
	WriteLine 
( 
$"  
$str  W
{W X
tokenVerificacionX i
}i j
"j k
)k l
;l m
return 
Task 
. 
CompletedTask %
;% &
} 	
} 
} Õ 
mC:\Users\Usuario\Desktop\medcitas\MedCitas\MedCitas.Infrastructure\Repositories\InMemoryPacienteRepository.cs
	namespace		 	
MedCitas		
 
.		 
Infrastructure		 !
.		! "
Repositories		" .
{

 
public 

class &
InMemoryPacienteRepository +
:, -
IPacienteRepository. A
{ 
private 
readonly 
List 
< 
Paciente &
>& '

_pacientes( 2
=3 4
new5 8
(8 9
)9 :
;: ;
public 
Task 
< 
Paciente 
? 
> $
ObtenerPorDocumentoAsync 7
(7 8
string8 >
numeroDocumento? N
)N O
{ 	
var 
p 
= 

_pacientes 
. 
FirstOrDefault -
(- .
x. /
=>0 2
x3 4
.4 5
NumeroDocumento5 D
==E G
numeroDocumentoH W
)W X
;X Y
return 
Task 
. 

FromResult "
<" #
Paciente# +
?+ ,
>, -
(- .
p. /
)/ 0
;0 1
} 	
public 
Task 
< 
Paciente 
? 
> !
ObtenerPorCorreoAsync 4
(4 5
string5 ;
correoElectronico< M
)M N
{ 	
var 
p 
= 

_pacientes 
. 
FirstOrDefault -
(- .
x. /
=>0 2
string 
. 
Equals 
( 
x 
.  
CorreoElectronico  1
,1 2
correoElectronico3 D
,D E
StringComparisonF V
.V W
OrdinalIgnoreCaseW h
)h i
)i j
;j k
return 
Task 
. 

FromResult "
<" #
Paciente# +
?+ ,
>, -
(- .
p. /
)/ 0
;0 1
} 	
public 
Task 
RegistrarAsync "
(" #
Paciente# +
paciente, 4
)4 5
{ 	
if 
( 
paciente 
. 
Id 
== 
Guid #
.# $
Empty$ )
)) *
paciente 
. 
Id 
= 
Guid "
." #
NewGuid# *
(* +
)+ ,
;, -

_pacientes!! 
.!! 
Add!! 
(!! 
paciente!! #
)!!# $
;!!$ %
return"" 
Task"" 
."" 
CompletedTask"" %
;""% &
}## 	
public%% 
Task%% 
<%% 
bool%% 
>%% 
ActivarCuentaAsync%% ,
(%%, -
string%%- 3
tokenVerificacion%%4 E
)%%E F
{&& 	
var'' 
paciente'' 
='' 

_pacientes'' %
.''% &
FirstOrDefault''& 4
(''4 5
x''5 6
=>''7 9
x'': ;
.''; <
TokenVerificacion''< M
==''N P
tokenVerificacion''Q b
)''b c
;''c d
if(( 
((( 
paciente(( 
==(( 
null((  
)((  !
return((" (
Task(() -
.((- .

FromResult((. 8
(((8 9
false((9 >
)((> ?
;((? @
paciente** 
.** 
EstaVerificado** #
=**$ %
true**& *
;*** +
paciente++ 
.++ 
TokenVerificacion++ &
=++' (
null++) -
;++- .
return,, 
Task,, 
.,, 

FromResult,, "
(,," #
true,,# '
),,' (
;,,( )
}-- 	
}.. 
}// ô
hC:\Users\Usuario\Desktop\medcitas\MedCitas\MedCitas.Infrastructure\Repositories\EfPacienteRepositorio.cs
	namespace 	
MedCitas
 
. 
Infrastructure !
.! "
Repositories" .
{ 
public 

class !
EfPacienteRepositorio &
:' (
IPacienteRepository) <
{ 
private 
readonly 
MedCitasDbContext *
_db+ .
;. /
public !
EfPacienteRepositorio $
($ %
MedCitasDbContext% 6
db7 9
)9 :
=>; =
_db> A
=B C
dbD F
;F G
public 
async 
Task 
< 
Paciente "
?" #
># $$
ObtenerPorDocumentoAsync% =
(= >
string> D
numeroDocumentoE T
)T U
=>V X
await 
_db 
. 
	Pacientes 
.  
FirstOrDefaultAsync  3
(3 4
p4 5
=>6 8
p9 :
.: ;
NumeroDocumento; J
==K M
numeroDocumentoN ]
)] ^
;^ _
public 
async 
Task 
< 
Paciente "
?" #
># $!
ObtenerPorCorreoAsync% :
(: ;
string; A
correoElectronicoB S
)S T
=>U W
await 
_db 
. 
	Pacientes 
.  
FirstOrDefaultAsync  3
(3 4
p4 5
=>6 8
p9 :
.: ;
CorreoElectronico; L
.L M
ToLowerM T
(T U
)U V
==W Y
correoElectronicoZ k
.k l
ToLowerl s
(s t
)t u
)u v
;v w
public 
async 
Task 
RegistrarAsync (
(( )
Paciente) 1
paciente2 :
): ;
{ 	
if 
( 
paciente 
. 
Id 
== 
Guid #
.# $
Empty$ )
)) *
paciente+ 3
.3 4
Id4 6
=7 8
Guid9 =
.= >
NewGuid> E
(E F
)F G
;G H
_db 
. 
	Pacientes 
. 
Add 
( 
paciente &
)& '
;' (
await 
_db 
. 
SaveChangesAsync &
(& '
)' (
;( )
} 	
public   
async   
Task   
<   
bool   
>   
ActivarCuentaAsync    2
(  2 3
string  3 9
tokenVerificacion  : K
)  K L
{!! 	
var"" 
paciente"" 
="" 
await""  
_db""! $
.""$ %
	Pacientes""% .
."". /
FirstOrDefaultAsync""/ B
(""B C
p""C D
=>""E G
p""H I
.""I J
TokenVerificacion""J [
==""\ ^
tokenVerificacion""_ p
)""p q
;""q r
if## 
(## 
paciente## 
==## 
null##  
)##  !
return##" (
false##) .
;##. /
paciente$$ 
.$$ 
EstaVerificado$$ #
=$$$ %
true$$& *
;$$* +
paciente%% 
.%% 
TokenVerificacion%% &
=%%' (
null%%) -
;%%- .
await&& 
_db&& 
.&& 
SaveChangesAsync&& &
(&&& '
)&&' (
;&&( )
return'' 
true'' 
;'' 
}(( 	
})) 
}** Þ0
mC:\Users\Usuario\Desktop\medcitas\MedCitas\MedCitas.Infrastructure\Migrations\20251020203133_InitialCreate.cs
	namespace 	
MedCitas
 
. 
Infrastructure !
.! "

Migrations" ,
{ 
public		 

partial		 
class		 
InitialCreate		 &
:		' (
	Migration		) 2
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
NombreCompleto "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ F
,F G
nullableH P
:P Q
falseR W
)W X
,X Y
TipoDocumento !
=" #
table$ )
.) *
Column* 0
<0 1
string1 7
>7 8
(8 9
type9 =
:= >
$str? E
,E F
nullableG O
:O P
falseQ V
)V W
,W X
NumeroDocumento #
=$ %
table& +
.+ ,
Column, 2
<2 3
string3 9
>9 :
(: ;
type; ?
:? @
$strA X
,X Y
	maxLengthZ c
:c d
$nume g
,g h
nullablei q
:q r
falses x
)x y
,y z
FechaNacimiento #
=$ %
table& +
.+ ,
Column, 2
<2 3
DateTime3 ;
>; <
(< =
type= A
:A B
$strC ]
,] ^
nullable_ g
:g h
falsei n
)n o
,o p
Sexo 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
nullable> F
:F G
falseH M
)M N
,N O
Telefono 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: Q
,Q R
	maxLengthS \
:\ ]
$num^ `
,` a
nullableb j
:j k
falsel q
)q r
,r s
CorreoElectronico %
=& '
table( -
.- .
Column. 4
<4 5
string5 ;
>; <
(< =
type= A
:A B
$strC [
,[ \
	maxLength] f
:f g
$numh k
,k l
nullablem u
:u v
falsew |
)| }
,} ~
PasswordHash  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> U
,U V
	maxLengthW `
:` a
$numb d
,d e
nullablef n
:n o
falsep u
)u v
,v w
Eps 
= 
table 
.  
Column  &
<& '
string' -
>- .
(. /
type/ 3
:3 4
$str5 ;
,; <
nullable= E
:E F
falseG L
)L M
,M N

TipoSangre 
=  
table! &
.& '
Column' -
<- .
string. 4
>4 5
(5 6
type6 :
:: ;
$str< B
,B C
nullableD L
:L M
falseN S
)S T
,T U
EstaVerificado "
=# $
table% *
.* +
Column+ 1
<1 2
bool2 6
>6 7
(7 8
type8 <
:< =
$str> G
,G H
nullableI Q
:Q R
falseS X
)X Y
,Y Z
TokenVerificacion %
=& '
table( -
.- .
Column. 4
<4 5
string5 ;
>; <
(< =
type= A
:A B
$strC I
,I J
nullableK S
:S T
trueU Y
)Y Z
,Z [
FechaRegistro !
=" #
table$ )
.) *
Column* 0
<0 1
DateTime1 9
>9 :
(: ;
type; ?
:? @
$strA [
,[ \
nullable] e
:e f
falseg l
)l m
}   
,   
constraints!! 
:!! 
table!! "
=>!!# %
{"" 
table## 
.## 

PrimaryKey## $
(##$ %
$str##% 3
,##3 4
x##5 6
=>##7 9
x##: ;
.##; <
Id##< >
)##> ?
;##? @
}$$ 
)$$ 
;$$ 
}%% 	
	protected(( 
override(( 
void(( 
Down((  $
((($ %
MigrationBuilder((% 5
migrationBuilder((6 F
)((F G
{)) 	
migrationBuilder** 
.** 
	DropTable** &
(**& '
name++ 
:++ 
$str++ !
)++! "
;++" #
},, 	
}-- 
}.. Ï(
^C:\Users\Usuario\Desktop\medcitas\MedCitas\MedCitas.Infrastructure\DataDb\MedCitasDbContext.cs
	namespace

 	
MedCitas


 
.

 
Infrastructure

 !
.

! "
DataDb

" (
{ 
public 

class 
MedCitasDbContext "
:# $
	DbContext% .
{ 
public 
MedCitasDbContext  
(  !
DbContextOptions! 1
<1 2
MedCitasDbContext2 C
>C D
optionsE L
)L M
:N O
baseP T
(T U
optionsU \
)\ ]
{^ _
}` a
public 
DbSet 
< 
Paciente 
> 
	Pacientes (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
null9 =
!= >
;> ?
	protected 
override 
void 
OnModelCreating  /
(/ 0
ModelBuilder0 <
modelBuilder= I
)I J
{ 	
modelBuilder 
. 
Entity 
<  
Paciente  (
>( )
() *
entity* 0
=>1 3
{ 
entity 
. 
HasKey 
( 
e 
=>  "
e# $
.$ %
Id% '
)' (
;( )
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
NombreCompleto' 5
)5 6
.6 7

IsRequired7 A
(A B
)B C
;C D
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
TipoDocumento' 4
)4 5
.5 6

IsRequired6 @
(@ A
)A B
;B C
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
NumeroDocumento' 6
)6 7
.7 8

IsRequired8 B
(B C
)C D
.D E
HasMaxLengthE Q
(Q R
$numR T
)T U
;U V
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
FechaNacimiento' 6
)6 7
.7 8

IsRequired8 B
(B C
)C D
;D E
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
Sexo' +
)+ ,
., -

IsRequired- 7
(7 8
)8 9
;9 :
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
Telefono' /
)/ 0
.0 1

IsRequired1 ;
(; <
)< =
.= >
HasMaxLength> J
(J K
$numK M
)M N
;N O
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
CorreoElectronico' 8
)8 9
.9 :

IsRequired: D
(D E
)E F
.F G
HasMaxLengthG S
(S T
$numT W
)W X
;X Y
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
PasswordHash' 3
)3 4
.4 5

IsRequired5 ?
(? @
)@ A
.A B
HasMaxLengthB N
(N O
$numO Q
)Q R
;R S
entity 
. 
Property 
(  
e  !
=>" $
e% &
.& '
Eps' *
)* +
.+ ,

IsRequired, 6
(6 7
)7 8
;8 9
entity   
.   
Property   
(    
e    !
=>  " $
e  % &
.  & '

TipoSangre  ' 1
)  1 2
.  2 3

IsRequired  3 =
(  = >
)  > ?
;  ? @
entity!! 
.!! 
Property!! 
(!!  
e!!  !
=>!!" $
e!!% &
.!!& '
EstaVerificado!!' 5
)!!5 6
;!!6 7
entity"" 
."" 
Property"" 
(""  
e""  !
=>""" $
e""% &
.""& '
TokenVerificacion""' 8
)""8 9
;""9 :
entity## 
.## 
Property## 
(##  
e##  !
=>##" $
e##% &
.##& '
FechaRegistro##' 4
)##4 5
;##5 6
}$$ 
)$$ 
;$$ 
base&& 
.&& 
OnModelCreating&&  
(&&  !
modelBuilder&&! -
)&&- .
;&&. /
}(( 	
})) 
}** 